<?xml version="1.0"?>

<precice-configuration>

  <log>
     <sink filter= "%Severity% > debug" format="---[precice] %ColorizedSeverity% %Message%" enabled="true" />
   </log>

  <solver-interface dimensions="2">

    <data:scalar name="DummyValue"/>

    <mesh name="Solver1_Nodes">
      <use-data name="DummyValue"/>
    </mesh>

    <mesh name="Solver2_Nodes">
      <use-data name="DummyValue"/>
    </mesh>

    <participant name="Solver1">
      <!-- Makes the named mesh available to the participant. Mesh is provided by the solver directly. -->
      <use-mesh name="Solver1_Nodes" provide="yes"/>
      <use-mesh name="Solver2_Nodes" from="Solver2"/>
      <!-- Define input/output of the solver.  -->
      <read-data name="DummyValue" mesh="Solver1_Nodes"/>
      <!--<mapping:nearest-neighbor direction="write" from="Fluid_Nodes" to="Structure_Nodes" constraint="consistent" timing="initial"/>-->
      <mapping:nearest-neighbor direction="read" from="Solver2_Nodes" to="Solver1_Nodes" constraint="consistent"/>
    </participant>

    <participant name="Solver2">
      <use-mesh name="Solver2_Nodes" provide="yes"/>
      <write-data  name="DummyValue" mesh="Solver2_Nodes"/>
    </participant>

    <m2n:sockets from="Solver1" to="Solver2"/>

    <coupling-scheme:serial-explicit>
        <participants first="Solver1" second="Solver2"/>
        <time-window-size value="1"/>
        <max-time value="200.0"/>
        <exchange data="DummyValue" mesh="Solver2_Nodes" from="Solver2" to="Solver1"/>
      </coupling-scheme:serial-explicit>

  </solver-interface>
</precice-configuration>
